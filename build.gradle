group 'nrip'
version '1.0-SNAPSHOT'

apply plugin: 'groovy'
apply plugin: 'java'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    compile 'org.codehaus.groovy:groovy-all:2.3.11'
    compile group: 'commons-io', name: 'commons-io', version: '2.4'
    compile group: 'org.rosuda.REngine', name: 'Rserve', version: '1.8.1'
    testCompile group: 'junit', name: 'junit', version: '4.11'
}

task run(dependsOn: 'classes', type: JavaExec) {
    main = 'APKTester'
    classpath = sourceSets.main.runtimeClasspath
}

task analyze(dependsOn: 'classes', type: JavaExec) {
    main = 'runners.FakeRunner'
    classpath = sourceSets.main.runtimeClasspath
    if (project.hasProperty('opt')) {
        args(opt.split(','))
    }
}


task extract(dependsOn: 'classes', type: JavaExec) {
    main = 'SummaryExtractor'
    classpath = sourceSets.main.runtimeClasspath
}

task csv(dependsOn: 'classes', type: JavaExec) {
    main = 'CSVGenerator'
    classpath = sourceSets.main.runtimeClasspath
}

task merge(dependsOn: 'classes', type: JavaExec) {
    main = 'SummaryMerger'
    classpath = sourceSets.main.runtimeClasspath
}

task vargha(dependsOn: 'classes', type: JavaExec) {
    main = 'statistics.Vargha'
    classpath = sourceSets.main.runtimeClasspath
}

task maxes(dependsOn: 'classes', type: JavaExec) {
    main = 'MaxGenerator'
    classpath = sourceSets.main.runtimeClasspath
}

task sums(dependsOn: 'classes', type: JavaExec) {
    main = 'SumsGenerator'
    classpath = sourceSets.main.runtimeClasspath
}